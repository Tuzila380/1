from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, ConversationHandler

TOKEN = "7885759155:AAHYE5TfoEhc4eWtE4Tss3Ro6GtkgdyRJwE"
ADMIN_GROUP_CHAT_ID = -4735156605  # ID –≥—Ä—É–ø–ø—ã –∞–¥–º–∏–Ω–æ–≤
TARGET_USER_ID = 987654321  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è

# –≠—Ç–∞–ø—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
WAITING_FOR_COMPLAINT = 1
WAITING_FOR_BID = 2

async def start(update: Update, context: CallbackContext):
    keyboard = [
        ["Varnix Group", "Varnix Games"],
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

async def ask_for_complaint(update: Update, context: CallbackContext):
    await update.message.reply_text("–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∂–∞–ª–æ–±—É —Ç–µ–∫—Å—Ç–æ–º.", reply_markup=ReplyKeyboardRemove())
    return WAITING_FOR_COMPLAINT

async def receive_complaint(update: Update, context: CallbackContext):
    user = update.message.from_user
    user_text_complaint = update.message.text  

    username = f"(@{user.username})" if user.username else "(–±–µ–∑ username)"
    message_to_admins = f"üîπ –ñ–∞–ª–æ–±–∞ –æ—Ç {user.full_name} {username}:\n{user_text_complaint}"

    await context.bot.send_message(chat_id=ADMIN_GROUP_CHAT_ID, text=message_to_admins)
    await update.message.reply_text("–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.", reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))

    return ConversationHandler.END  

async def ask_for_bid(update: Update, context: CallbackContext):
    await update.message.reply_text("1. –ù–∞–∑–≤–∞–∏—Ç–µ –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–∞—Å—Ç—å \n2. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –≤—ã –¥–æ–ª–∂–Ω—ã –ø–æ–ø–∞—Å—Ç—å –Ω–∞ —ç—Ç—É –¥–æ–ª–∂–Ω–æ—Å—Ç—å", reply_markup=ReplyKeyboardRemove())
    return WAITING_FOR_BID

async def receive_bid(update: Update, context: CallbackContext):
    user_text_bid = update.message.text  
    user = update.message.from_user
    await update.message.reply_text(f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞: {user_text_bid}", reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))

    username = f"(@{user.username})" if user.username else "(–±–µ–∑ username)"
    message_to_admins = f"üì© –ó–∞—è–≤–∫–∞ –æ—Ç {user.full_name} {username}:\n{user_text_bid}"

    await context.bot.send_message(chat_id=ADMIN_GROUP_CHAT_ID, text=message_to_admins)
    await update.message.reply_text("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.", reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))
    return ConversationHandler.END  

async def forward_admin_messages(update: Update, context: CallbackContext):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –≥—Ä—É–ø–ø—ã –∞–¥–º–∏–Ω–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    if update.message.chat_id == ADMIN_GROUP_CHAT_ID:  
        user_message = update.message.text  
        await context.bot.send_message(chat_id=TARGET_USER_ID, text=f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–æ–≤:\n{user_message}")

async def receive_complaint(update: Update, context: CallbackContext):
    user = update.message.from_user
    user_text_complaint = update.message.text  

    username = f"(@{user.username})" if user.username else "(–±–µ–∑ username)"
    message_to_admins = f"üîπ –ñ–∞–ª–æ–±–∞ –æ—Ç {user.full_name} {username}:\n{user_text_complaint}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∂–∞–ª–æ–±—É –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–æ–≤ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sent_message = await context.bot.send_message(chat_id=ADMIN_GROUP_CHAT_ID, text=message_to_admins)
    context.bot_data[sent_message.message_id] = user.id  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è

    await update.message.reply_text("–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.", reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))

    return ConversationHandler.END  

async def forward_admin_reply(update: Update, context: CallbackContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    if update.message.reply_to_message:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        original_message_id = update.message.reply_to_message.message_id
        user_id = context.bot_data.get(original_message_id)  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        if user_id:
            await context.bot.send_message(chat_id=user_id, text=f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n{update.message.text}")



async def receive_bid(update: Update, context: CallbackContext):
    user = update.message.from_user
    user_text_bid = update.message.text  

    username = f"(@{user.username})" if user.username else "(–±–µ–∑ username)"
    message_to_admins = f"üì© –ó–∞—è–≤–∫–∞ –æ—Ç {user.full_name} {username}:\n{user_text_bid}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∂–∞–ª–æ–±—É –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–æ–≤ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sent_message = await context.bot.send_message(chat_id=ADMIN_GROUP_CHAT_ID, text=message_to_admins)
    context.bot_data[sent_message.message_id] = user.id  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è

    await update.message.reply_text("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.", reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))

    return ConversationHandler.END  

async def forward_admin_reply(update: Update, context: CallbackContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    if update.message.reply_to_message:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        original_message_id = update.message.reply_to_message.message_id
        user_id = context.bot_data.get(original_message_id)  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        if user_id:
            await context.bot.send_message(chat_id=user_id, text=f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n{update.message.text}")


async def message_handler(update: Update, context: CallbackContext):
    text = update.message.text

    if text == "Varnix Group":
        keyboard = [["–í–∞–∫–∞–Ω—Å–∏–∏", "–•–æ—á—É –∫ –í–∞–º"], ["üîô –ù–∞–∑–∞–¥"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

    elif text == "–í–∞–∫–∞–Ω—Å–∏–∏":
        await update.message.reply_text("–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π: ...")

    elif text == "–•–æ—á—É –∫ –í–∞–º":
        await update.message.reply_text("–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏ –º—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è")

    elif text == "Varnix Games":
        keyboard = [["Rust –°–µ—Ä–≤–µ—Ä"], ["üîô –ù–∞–∑–∞–¥"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

    elif text == "Rust –°–µ—Ä–≤–µ—Ä":
        keyboard = [["–ñ–∞–ª–æ–±–∞"], ["üîô –ù–∞–∑–∞–¥"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

    elif text == "üîô –ù–∞–∑–∞–¥":
        await start(update, context)

def main():
    app = Application.builder().token(TOKEN).build()

    complaint_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–ñ–∞–ª–æ–±–∞$"), ask_for_complaint)],
        states={WAITING_FOR_COMPLAINT: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_complaint)]},
        fallbacks=[]
    )

    bid_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–•–æ—á—É –∫ –í–∞–º$"), ask_for_bid)],
        states={WAITING_FOR_BID: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_bid)]},
        fallbacks=[]
    )

    app.add_handler(MessageHandler(filters.REPLY & filters.TEXT, forward_admin_reply))
    app.add_handler(MessageHandler(filters.REPLY & filters.TEXT, forward_admin_reply))


    app.add_handler(CommandHandler("start", start))
    app.add_handler(complaint_handler)
    app.add_handler(bid_handler)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –≥—Ä—É–ø–ø—ã –∞–¥–º–∏–Ω–æ–≤
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, forward_admin_messages))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
